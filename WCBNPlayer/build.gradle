buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    google()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.squareup.okhttp:okhttp:2.5.0'
    implementation 'com.android.support:design:27.1.1'
    implementation ('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }
}

if(file("keys_private.gradle").exists()) {
    apply from: 'keys_private.gradle'
}
else {
    logger.warn('DANGER: USING DEFAULT KEYS!!! SEE keys_default.gradle')
    apply from: 'keys_default.gradle'
}

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
    }

    signingConfigs {
        release_test {
            storeFile keyFileTest
            storePassword storePassTest
            keyAlias keyAliasTest
            keyPassword keyPassTest
        }
        release {
            storeFile file('C:/Users/owner/Desktop/CURRENT/wcbnplayer/WCBNPlayer/wcbn_keystore.jks')
            storePassword 'wcbnwcbnfm'
            keyAlias 'key0'
            keyPassword 'wcbnwcbnfm'
        }
    }

    buildTypes {
        release {
            versionNameSuffix "_rel"+"-"+getVersionName()
        }

        debug {
            versionNameSuffix "_debug"+"-"+getVersionName()
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
//            outputFileName = $(variant.baseName)+"-"+$(variant.versionName)+".apk"
//              outputFileName = (variant.versionName)+".apk"
            outputFileName = "WCBN-${variant.versionName}.apk"
        }
    }

    /* Product flavors: We'll build apps for multiple stations with a single project later on. */
    // Release package name for Google Play
    flavorDimensions "tier"

    productFlavors {
        wcbn_deploy {
            applicationId "org.wcbn.player"
            signingConfig signingConfigs.release
        }
        // Alpha/beta testing package name for Google Play
        wcbn_testing {
            applicationId "org.wcbntest.android"
            signingConfig signingConfigs.release_test
        }
    }
}
